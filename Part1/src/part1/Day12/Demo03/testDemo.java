package part1.Day12.Demo03;

public class testDemo {
    public static void main(String[] args) {
        demo02 d1 = new demo02();

        /**
         * demo02.method();  静态方法只能在包含接口类的情况下调用
         * 接口中的静态方法只能通过接口来调用
         */

        demo01.method();
        /**
         * 通过实现类的对象可以调用接口中的默认方法
         * 若果实现类里面重写了默认方法那么 将会调用重写过后的方法
         *
         * -->类优先原则
         * 如果子类或者实现类 继承的父类和实现的接口中都声明了同名同参的默认方法
         * 在子类没有重写该方法的情况下，默认调用的是父类中的方法
         *
         * -->接口冲突
         * 如果实现类实现了多个接口，而多个接口中，定义了同名同参的默认方法，那么就会发生编译报错 这就叫做接口冲突
         * 解决方法是 必须在本实现类里面重写 该重名的默认方法
         *
         * 如何在实现类的方法中调用中父类、接口中被重写的方法？
         * 见本demo02
         */

        d1.method1();

        d1.method2();  //类优先原则的体现

//
        d1.method00();

    }
}
